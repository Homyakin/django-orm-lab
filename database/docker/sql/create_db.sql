-- MySQL Script generated by MySQL Workbench
-- Mon Mar  2 19:32:38 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema storage
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema storage
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `storage` DEFAULT CHARACTER SET utf8 ;
USE `storage` ;

-- -----------------------------------------------------
-- Table `storage`.`space`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storage`.`space` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `useful_volume` INT NOT NULL,
  `temperature` INT NOT NULL,
  `humidity` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storage`.`rack`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storage`.`rack` (
  `number` INT NOT NULL AUTO_INCREMENT,
  `space_id` INT NOT NULL,
  `capacity` INT NOT NULL,
  `height` INT NOT NULL,
  `width` INT NOT NULL,
  `length` INT NOT NULL,
  `max_weight` INT NOT NULL,
  PRIMARY KEY (`number`),
  INDEX `fk_rack_space_idx` (`space_id` ASC) VISIBLE,
  CONSTRAINT `fk_rack_space`
    FOREIGN KEY (`space_id`)
    REFERENCES `storage`.`space` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storage`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storage`.`client` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NULL,
  `bank_details` TEXT(3000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storage`.`contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storage`.`contract` (
  `number` INT NOT NULL AUTO_INCREMENT,
  `end_date` VARCHAR(45) NOT NULL,
  `client_id` INT NOT NULL,
  PRIMARY KEY (`number`),
  INDEX `fk_contract_client1_idx` (`client_id` ASC) VISIBLE,
  CONSTRAINT `fk_contract_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `storage`.`client` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storage`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storage`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `height` INT NOT NULL,
  `width` INT NOT NULL,
  `length` INT NOT NULL,
  `weight` INT NOT NULL,
  `date_of_receipt` DATE NOT NULL,
  `min_temperature` INT NOT NULL,
  `max_temperature` INT NOT NULL,
  `min_humidity` INT NOT NULL,
  `max_humidity` INT NOT NULL,
  `contract_number` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_product_contract1_idx` (`contract_number` ASC) VISIBLE,
  CONSTRAINT `fk_product_contract1`
    FOREIGN KEY (`contract_number`)
    REFERENCES `storage`.`contract` (`number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storage`.`product_to_rack`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storage`.`product_to_rack` (
  `rack_number` INT NOT NULL,
  `product_id` INT NOT NULL,
  `position` VARCHAR(45) NOT NULL,
  INDEX `fk_table1_rack1_idx` (`rack_number` ASC) VISIBLE,
  INDEX `fk_table1_product1_idx` (`product_id` ASC) VISIBLE,
  PRIMARY KEY (`rack_number`, `product_id`),
  UNIQUE INDEX `UNIQUE_POSITION` (`rack_number` ASC, `position` ASC) VISIBLE,
  UNIQUE INDEX `product_id_UNIQUE` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_table1_rack1`
    FOREIGN KEY (`rack_number`)
    REFERENCES `storage`.`rack` (`number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `storage`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
